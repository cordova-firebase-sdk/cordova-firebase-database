sudo: required
dist: trusty

group: edge  # Add this

services:
  - couchdb

env:
  global:
    - ANDROID_API=25
    - ANDROID_BUILD_TOOLS=28.0.3
    - NODE_VERSION=7.0.0

before_cache:
  # Do not cache a few Gradle files/directories (see https://docs.travis-ci.com/user/languages/java/#Caching)
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    # Android SDK
    - $HOME/android-sdk-dl
    - $HOME/android-sdk

    # Gradle dependencies
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

    # Android directory
    - $HOME/.android

    # NVM
    - $HOME/.nvm

matrix:
  include:
  - os: linux
    env: CORDOVA_PLATFORM="browser"
    language: node_js
  - env: CORDOVA_PLATFORM="android" ANDROID_HOME=${HOME}/android-sdk ORG_GRADLE_PROJECT_cdvMinSdkVersion=24 ORG_GRADLE_PROJECT_cdvCompileSdkVersion=24 ORG_GRADLE_PROJECT_cdvBuildToolsVersion=${ANDROID_BUILD_TOOLS}
    os: linux
    language: android
    jdk: oraclejdk8

install:
  - exist=$(which nvm); if [[ -z "${exist}" ]]; then
      rm -rf ~/.nvm > /dev/null;
      git clone https://github.com/creationix/nvm.git ~/.nvm > /dev/null;
      (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags` > /dev/null);
      source ~/.nvm/nvm.sh && nvm > /dev/null;
    fi
  - exist=$(nvm list | grep ${NODE_VERSION}); if [[ -z "${exist}" ]]; then
      nvm install ${NODE_VERSION} > /dev/null;
      nvm alias default ${NODE_VERSION} > /dev/null;
      nvm use default > /dev/null;
    fi
  - exist=$(nvm list | grep 'v0.10.48'); if [[ ! -z "${exist}" ]]; then
      nvm uninstall v0.10.48 > /dev/null;
    fi
  - node --version
  - exist=$(which cordova); if [[ -z "${exist}" ]]; then npm -g install cordova > /dev/null; fi
  - cordova --version
  - exist=$(which cordova-paramedic); if [[ -z "${exist}" ]]; then
      git clone https://github.com/apache/cordova-paramedic /tmp/paramedic;
      pushd /tmp/paramedic;
      npm i > /dev/null;
      popd;
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip; fi;
      unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d ${ANDROID_HOME};
    fi
  - if [[ ! -e "${HOME}/.android/repositories.cfg" ]]; then
      touch ${HOME}/.android/repositories.cfg > /dev/null;
    fi
  - if [[ ! -e "${HOME}/.android/avd" ]]; then
      mkdir -p ${HOME}/.android/avd/ > /dev/null;
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      echo "y" | ${ANDROID_HOME}/tools/bin/sdkmanager 'tools' > /dev/null;
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      echo "y" | ${ANDROID_HOME}/tools/bin/sdkmanager 'platform-tools' > /dev/null;
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      echo "y" | ${ANDROID_HOME}/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" > /dev/null;
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      echo "y" | android update sdk -a --no-ui --filter android-${ANDROID_API};
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      echo "y" | android update sdk -a --no-ui --filter sys-img-armeabi-v7a-android-${ANDROID_API};
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      echo "y" | ${ANDROID_HOME}/tools/bin/sdkmanager 'extras;google;m2repository' > /dev/null;
    fi
  - npm i > /dev/null

before_script:
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      android list targets;
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      echo no | android create avd --force -n test -t android-${ANDROID_API} --abi armeabi-v7a;
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      emulator -avd test -no-window &
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      android-wait-for-emulator;
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      adb shell input keyevent 82;
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      adb wait-for-device get-serialno;
    fi


script:
  - npm run test


  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      while [ $? -ne 0 ]; do
        sleep 1 && curl -v http://localhost:5984;
      done
    fi
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      node /tmp/paramedic/main.js  --cleanUpAfterRun --platform android --plugin .;
    fi
