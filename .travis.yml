sudo: false

env:
  global:
  - TRAVIS_NODE_VERSION="5.5"
  - ANDROID_API_LEVEL=28
  - ANDROID_BUILD_TOOLS_VERSION=27.0.3
  - ANDROID_ABI=google_apis/armeabi-v7a
  - ANDROID_EMULATOR_IMAGE=sys-img-armeabi-v7a-android-28

notifications:
  email: false

branches:
  only:
  - master

matrix:
  include:
  - env: PLATFORM=android-7.0
    os: linux
    node_js: '${TRAVIS_NODE_VERSION}'
    language: android
    jdk: oraclejdk8
    android:
      components:
        # Base components 
        - tools # to get the new `repository-11.xml`
        - tools # https://github.com/travis-ci/travis-ci/issues/6040#issuecomment-219367943)
        - platform-tools   
        - build-tools-$ANDROID_BUILD_TOOLS_VERSION # get the build tools version to build the project

        # used sdk versions
        - android-$ANDROID_API_LEVEL # get the android sdk version to build the project
        - android-$EMULATOR_API_LEVEL # get the android sdk version for the emulator

        # Get the latest version of additional components
        - extra-android-support
        - extra-google-m2repository
        - extra-android-m2repository
        - extra-google-google_play_services

        # Specify the needed emulator
        - $ANDROID_EMULATOR_IMAGE
    licenses:
      - 'android-sdk-license-.+'
      - '.+'

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache
    
before_install:
  - rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm
    && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm
    install ${TRAVIS_NODE_VERSION} > /dev/null
  - node --version
  - npm install -g cordova@${CORDOVA_VERSION} > /dev/null
  - npm install -g cordova-paramedic > /dev/null
  - cordova --version

install:
  #- if [[ "$PLATFORM" =~ android ]]; then
  - touch ~/.android/repositories.cfg > /dev/null 2>&1
  - mkdir -p ~/.android/avd > /dev/null 2>&1
  
  - sdkmanager --list || true # List all available targets, device definitions and AVDs.
  # Update sdk tools to latest version and install/update components
  - echo yes | sdkmanager "tools"
  - echo yes | sdkmanager "platform-tools"
  - echo yes | sdkmanager "build-tools;"$ANDROID_BUILD_TOOLS_VERSION
  - echo yes | sdkmanager "platforms;android-"$ANDROID_API_LEVEL # Latest platform required by SDK tools

  - echo yes | sdkmanager "extras;android;m2repository"
  - echo yes | sdkmanager "extras;google;m2repository"
  - echo yes | sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2"
  - echo yes | sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2"

  - echo yes | sdkmanager --update
  - echo yes | sdkmanager --licenses
  - sdkmanager --list || true
  #  fi
  - npm cache clean > /dev/null
  - npm install > /dev/null

before_script:
  # Create and start the emulator
  - sdkmanager "system-images;android-"$EMULATOR_API_LEVEL";google_apis;armeabi-v7a"
  - echo no | avdmanager -v create avd -f -n test -k "system-images;android-"$EMULATOR_API_LEVEL";google_apis;armeabi-v7a"
  - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &

  - android-wait-for-emulator

  # Turn off animations
  - adb shell settings put global window_animation_scale 0 &
  - adb shell settings put global transition_animation_scale 0 &
  - adb shell settings put global animator_duration_scale 0 &

  # Wake up
  - adb shell input keyevent 82 &
  - adb shell input keyevent 1 &


script:
  - npm test
  - if [[ "$PLATFORM" =~ android ]]; then
      cordova-paramedic --platform android --plugin .;
    fi
